// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AvailablePropertyFeatures These are a specific set of 'Feature' entries avaiable for each property.
//
// swagger:model AvailablePropertyFeatures
type AvailablePropertyFeatures struct {

	// Advertising body
	PropertyAdvertText string `json:"PropertyAdvertText,omitempty"`

	// Amenities close to property
	PropertyAmenities string `json:"PropertyAmenities,omitempty"`

	// No. of bathrooms.
	PropertyBathroomsNo string `json:"PropertyBathroomsNo,omitempty"`

	// No. of bedrooms.
	PropertyBedroomsNo string `json:"PropertyBedroomsNo,omitempty"`

	// No. of carports.
	PropertyCarsNo string `json:"PropertyCarsNo,omitempty"`

	// This will be one of the following options (Apartment, House, Home and Income, Lifestyle, Unit, Townhouse, Holiday Home, Section Res, Flats).
	PropertyClass string `json:"PropertyClass,omitempty"`

	// No. of ensuites.
	PropertyEnsuitesNo string `json:"PropertyEnsuitesNo,omitempty"`

	// Free form list of other features
	PropertyFeatureDetails string `json:"PropertyFeatureDetails,omitempty"`

	// Floor area in metres (squared
	PropertyFloorArea string `json:"PropertyFloorArea,omitempty"`

	// Free form list of furnishings within the property
	PropertyFurnishings string `json:"PropertyFurnishings,omitempty"`

	// latitude and longitude separted by : (From Google Maps API)
	PropertyGeographicLocation string `json:"PropertyGeographicLocation,omitempty"`

	// Header for the 'Advert Text'.
	PropertyHeader string `json:"PropertyHeader,omitempty"`

	// Land area in hectares
	PropertyLandAreaHectares string `json:"PropertyLandAreaHectares,omitempty"`

	// Land area in metres (squared)
	PropertyLandAreaMSquared string `json:"PropertyLandAreaMSquared,omitempty"`

	// Is the 'Property' a new construction (Yes / No)
	PropertyNewConstruction string `json:"PropertyNewConstruction,omitempty"`

	// This can be a number or free form text
	PropertyParking string `json:"PropertyParking,omitempty"`

	// Is the 'Property' allowed to have pets (Yes / No)
	PropertyPetsAllowed string `json:"PropertyPetsAllowed,omitempty"`

	// 'Post Code' of Property
	PropertyPostCode string `json:"PropertyPostCode,omitempty"`

	// Should the 'Property Address' be published online
	PropertyPublishAddress string `json:"PropertyPublishAddress,omitempty"`

	// Should the 'Property' entry be published online
	PropertyPublishEntry string `json:"PropertyPublishEntry,omitempty"`

	// Is the 'Property' allowed smoking on premise (Yes / No)
	PropertySmokersAllowed string `json:"PropertySmokersAllowed,omitempty"`

	// Number of Storeys of the property
	PropertyStories string `json:"PropertyStories,omitempty"`

	// URL of 'Virtual Tour' or 'Video'
	PropertyVirtualTourURL string `json:"PropertyVirtualTourURL,omitempty"`

	// Link to website or listing URL
	PropertyWebLinkURL string `json:"PropertyWebLinkURL,omitempty"`

	// Year the property was built.
	PropertyYearBuilt string `json:"PropertyYearBuilt,omitempty"`
}

// Validate validates this available property features
func (m *AvailablePropertyFeatures) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AvailablePropertyFeatures) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AvailablePropertyFeatures) UnmarshalBinary(b []byte) error {
	var res AvailablePropertyFeatures
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
