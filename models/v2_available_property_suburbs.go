// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2AvailablePropertySuburbs v2 available property suburbs
//
// swagger:model v2AvailablePropertySuburbs
type V2AvailablePropertySuburbs struct {

	// External Code Reference (NOTE: Based to 'Suburb Type')
	PropertySuburbCode string `json:"PropertySuburbCode,omitempty"`

	// Suburb District (NOTE: In 'Australia' this displays a 'Post Code')
	PropertySuburbDistrictOrPostcode string `json:"PropertySuburbDistrictOrPostcode,omitempty"`

	// Suburb Name.
	PropertySuburbName string `json:"PropertySuburbName,omitempty"`

	// Region (NOTE: In 'Australia' this displays a 'State')
	PropertySuburbRegionOrState string `json:"PropertySuburbRegionOrState,omitempty"`

	// The 'Suburb Type' is describes where the source of the suburb code originates
	PropertySuburbType string `json:"PropertySuburbType,omitempty"`
}

// Validate validates this v2 available property suburbs
func (m *V2AvailablePropertySuburbs) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2AvailablePropertySuburbs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2AvailablePropertySuburbs) UnmarshalBinary(b []byte) error {
	var res V2AvailablePropertySuburbs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
